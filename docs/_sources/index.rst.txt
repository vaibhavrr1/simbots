.. Simbots documentation master file, created by
   sphinx-quickstart on Sun Nov 21 20:04:20 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.


Welcome to Simbots's documentation!
===================================

Simple bots or Simbots is a library designed to create simple bots using the power of python. This library utilises Intent, Entity , Relation and Context
model to create bots . It uses a multinomial NB classifier to create intent classifiers.



.. toctree::
   :maxdepth: 4

   simbots


*******************
Quick Start
*******************

In this Example we will set up a simple bot which can answer basic questions like

Who are you ?

What is your age ?

Lets first setup some intent examples

.. code:: python

   #!/usr/bin/python
   # -*- coding: utf-8 -*-

   import json

   intentExamples = {
       'Greetings': [
           'Hello !',
           'Hi , How are you ?',
           'Hey !! ',
           'Namaste ',
           'Good day',
           'Good evening',
           'Good morning',
           'Good to see you',
           'Greetings',
           'Have you been well?',
           'Hello Agent',
           'Hello',
           'Hello I am looking for some help here',
           'Hey how are you doing',
           'Hey there all',
           'Hey there',
           'Hey twin',
           'Hey you',
           'Hi advisor',
           'Hi there',
           'How are things going?',
           'How are you today?',
           'How have you been?',
           'How is it going?',
           'How r u?',
           'Looking good eve',
           'take me back',
           "What's new?",
           "What's up?",
           'Who is this?',
           'You there',
           'Namaste',
           'satsriyakaal',
           'helo',
           'hiiiiiii',
           'abe oye',
           ' sup ',
           ' wassup bruh ',
           ' sup bro ',
           ' ssssup mate whats up',
       ],
       'BotName': [
           'Who are you',
           'Who are you ?',
           'What is your Name ?',
           'What is your name ',
           'what should i call you ?',
           'What should i call you',
           'How to address you ?',
           'how  to address you by name',
           'what is your name in english',
           'call you',
           'your name',
           'call you ?',
           'your name ?',
           'whom are you',
           'whom are you referred as',
       ],

       'Irrelevant': ['the weather is fine todaythe sun rises in the east'
           , 'the quick brown fox jumps over the red carpet',
                      'This is random irrelevant text',
                      'What is love , baby dont hurt me ',
                      ],
   }

Since these intents are frequently used in many bots therefore we have added them in the utils module .

.. code:: python

   from simbots.utils.builtInIntents import IntentSamples

   intentExamples = {
    'Greetings': IntentSamples.greetingSamples(),
    'BotName': IntentSamples.botNameSamples(),
    'Irrelevant': ['the weather is fine today','the sun rises in the east','the quick brown fox jumps over the red carpet',
                   'the sun rises in the east',
                   'What is love , baby dont hurt me ',
                   'this is a new dawn a new day']
    }



Now we will add some entities here . Note that we dont have any interesting entities here . We have only added entities to help the bot identify certain
intents like Greetings

.. code:: python

   entityExamples = {
    "GreetingsHelper": {
        "wsup": [
            {
                "tag": "case-insensitive",
                "pattern": "\s[w]*[a]*[s] [u] [p] \s",
                "type": "regex",
            }
        ],
        "hi": [{"tag": "case-insensitive", "pattern": "\s[h] [i] \s", "type": "regex"}],
        "hello": [
            {
                "tag": "case-insensitive",
                "pattern": "\s[h] [e] [l] [o] \s",
                "type": "regex",
            }
        ],
    }}

Note that you can also import some commonly used entities.

.. code:: python

   from simbots.utils.builtInEntities import EntitySamples

   entityExamples = {
    'GreetingsHelper': EntitySamples.greetingsHelper(),
    }



Now that we are done with the entities and intents lets setup the basic bot responses . Here we have created three themes (themeBasic,funky,cowboy)
which can be switched to give varied responses.

.. code:: python

   botMessages = {
       "themeBasic": {
           "Greetings": {
               "basic": [
                   "Hello ! What can i do for you ?",
                   "Hi there ! what can I do for you ?",
                   "Hello",
               ]
           },
           "BotName": {"basic": ["I am riko", "You can call me riko"]},
           "Irrelevant": {
               "basic": [
                   "Im sorry Im not getting you :( ",
                   "Im sorry could you please rephrase ?",
               ]
           },
       },
       "funky": {
           "Greetings": {
               "basic": ["Hey Yo Wassup Bro What can i do for ya ?", "Heyo what ya want ?"]
           },
           "BotName": {"basic": ["Yo Im Riko ! "]},
       },
       "cowboy": {
           "Greetings": {
               "basic": [
                   "Howdy partner what can i do for you greenhorn",
                   " Howdy ! Pleasure meeting ya ?",
               ]
           },
           "BotName": {
               "basic": ["Howdy Partner , Im Riko  "]
           },
       },
   }



Now lets define the bot . To do that you must always define the reason method in the bot class. Depending on the usecase ou might also have to change the
say method.

.. code:: python

   from Bot import Bot
   class NewBot(Bot):

       def reason(self):

           # # find current dialogNumber

           currentDialogNumber = self.contextManager.context['dialogs'][-1]

           currentTopIntent = self.contextManager.findCurrentTopIntent()

           currentEntities = self.contextManager.findCurrentEntities()

           output = []

           if currentTopIntent['confidence'] < self.confidenceLimit \
                   or currentTopIntent['name'] == 'Irrelevant':
               currentTopIntent = {}

           if currentTopIntent:

               # #
               # # Rule For All
               # #
               # if currentTopIntent["name"]=="Greetings":
               # #
               # # Person is greeting
               # #

               name = currentTopIntent['name'].split('_')[0]
               reply = {'tag': '{0}.basic'.format(name), 'data': None}
               # note if you had defined the botname response as "my name is {0}" , then you can change the botname
               # response by changing the data field here as this is set in the string.


               # "message":""

               output.append(reply)
           else:

               # #
               # #
               # # Rule for irrelevant
               # #
               # #

               irrelevant = {'tag': 'Irrelevant.basic', 'data': None}

               output.append(irrelevant)

           return output

   newB = NewBot(intentExamples, entityExamples, botMessages,
                 confidenceLimit=0)

Once we have defined the bot, lets run it !

.. code:: python

   outputTheme = 'themeBasic'

   print('Type @@ to exit bot ,@i to get intents ,@c to get context')
   while True:

       inputMessage = input('User : ')

       if inputMessage == '@@':
           break
       elif inputMessage == '@i':
           print('Bot Intents: ')
           print(json.dumps(newB.getBotConfidence(), indent=2))
       elif inputMessage == '@c':
           print('Bot Context: ')
           print(json.dumps(newB.getBotContext(), indent=2))
       else:
           inputMessage = ' {0} '.format(inputMessage)
           output = newB.getBotOutput(inputMessage, outputTheme)
           print('{0}Bot : {1}'.format(outputTheme, output))

---------

Now heres the bot with a number of intents and entities added

.. code:: python

   from simbots.Bot import Bot
   from simbots.utils.builtInIntents import IntentSamples
   from simbots.utils.builtInEntities import EntitySamples
   import json




   intentExamples = {
       'Greetings': IntentSamples.greetingSamples(),
       'BotName': IntentSamples.botNameSamples(),
       'Relatives': IntentSamples.relativeSamples(),
       'Age': IntentSamples.ageSamples(),
       'BirthPlace': IntentSamples.birthPlaceSamples(),
       'Abilities': IntentSamples.abilitiesSamples(),
       'Really': IntentSamples.reallySamples(),
       'Laughter': IntentSamples.laughterSamples(),
       'Cool': IntentSamples.coolSamples(),
       'Praise': IntentSamples.praiseSamples(),
       'TrueT': IntentSamples.trueSamples(),
       'FalseT': IntentSamples.falseSamples(),
       'Bye': IntentSamples.byeSamples(),
       'Confirm': IntentSamples.confirmSamples(),
       'Thanks': IntentSamples.thanksSamples(),
       'Discard': IntentSamples.discardSamples(),
       'Joke': IntentSamples.jokeSamples(),
       'Irrelevant': ['the weather is fine today','the sun rises in the east','the quick brown fox jumps over the red carpet',
                      'the sun rises in the east',
                      'What is love , baby dont hurt me ',
                      'this is a new dawn a new day'],
   }

   entityExamples = {
       'GreetingsHelper': EntitySamples.greetingsHelper(),
       'LaughterHelper': EntitySamples.laughterHelper(),
       'CoolHelper': EntitySamples.coolHelper(),
       'ByeHelper': EntitySamples.byeHelper(),
   }

   botMessages = {'themeBasic': {
       'Greetings': {'basic': ['Hello ! What can i do for you ?',
                               'Hi there ! what can I do for you ?', 'Hello']},
       'Age': {'basic': ['I am two years old ', 'I am two']},
       'BotName': {'basic': ['I am riko', 'You can call me riko']},
       'Abilities': {'basic': ['I am learning to make basic conversation ! \n ... and i can tell you a couple of jokes :) '
                               ]},
       'BirthPlace': {'basic': ['I am from  India', 'I am an Indian'
           , 'I am punjabi and i love food']},
       'Really': {'basic': ['To the best of my knowledge', 'Im positive !'
                            ]},
       'Laughter': {'basic': ['Im glad i was able to make you smile !',
                              'See I can be funny !',
                              'And they say I dont have a sense of humor :)']},
       'Cool': {'basic': ['cool', 'thanks']},
       'Bye': {'basic': ['Bubye !', 'Bye ! nice chatting with you !']},
       'Confirm': {'basic': ['cool ']},
       'Discard': {'basic': ['No it is then', 'agreed , no it is .']},
       'TrueT': {'basic': ['I know right', 'that makes me ']},
       'FalseT': {'basic': ['Im still learning ... I sometimes make mistakes '
                            ]},
       'Praise': {'basic': ['Thanks ! now i think ill blush ',
                            'So nice of you to say that !']},
       'Relatives': {'basic': ['Umm no i dont really have any relatives :)'
                               ]},
       'Thanks': {'basic': ['Dont mention it ',
                            ' Im glad , please dont mention it']},
       'Joke': {'basic': ['''

    Sure here is one
    {0}'''.format(el.replace('...'
                             , '''

   ''')) for el in
                          ['What did one pirate say to the other when he beat him at chess? Checkmatey.'
                              ,
                           'I burned 2000 calories today<>I left my food in the oven for too long.'
                           ]]},
       'Question': {'basic': ['i dont know !']},
       'Irrelevant': {'basic': ['Im sorry Im not getting you :( ',
                                'Im sorry could you please rephrase ?']},
   },
       'funky': {'Greetings': {'basic': ['Hey Yo Wassup Bro What can i do for ya ?'
           , 'Heyo what ya want ?']},
                 'Abilities': {'basic': ['Yo I can get ya somethin to eat '
                                         ]}},
       'cowboy': {'Greetings': {'basic': ['Howdy partner what can i do for you greenhorn'
           , ' Howdy ! Pleasure meeting ya ?']},
                  'Abilities': {'basic': ['You up for some food ? cause i can help you with that '
                                          ]}}}


   class NewBot(Bot):

       def reason(self):

           # # find current dialogNumber

           currentDialogNumber = self.contextManager.context['dialogs'][-1]

           currentTopIntent = self.contextManager.findCurrentTopIntent()

           currentEntities = self.contextManager.findCurrentEntities()

           output = []

           if currentTopIntent['confidence'] < self.confidenceLimit \
                   or currentTopIntent['name'] == 'Irrelevant':
               currentTopIntent = {}

           if currentTopIntent:

               # #
               # # Rule For All
               # #
               # if currentTopIntent["name"]=="Greetings":
               # #
               # # Person is greeting
               # #

               name = currentTopIntent['name'].split('_')[0]
               reply = {'tag': '{0}.basic'.format(name), 'data': None}

               # "message":""

               output.append(reply)
           else:

               # #
               # #
               # # Rule for irrelevant
               # #
               # #

               irrelevant = {'tag': 'Irrelevant.basic', 'data': None}

               output.append(irrelevant)

           return output


   newB = NewBot(intentExamples, entityExamples, botMessages,
                 confidenceLimit=0)

   outputTheme = 'themeBasic'

   print('Type @@ to exit bot ,@i to get intents ,@c to get context')
   while True:

       inputMessage = input('User : ')

       if inputMessage == '@@':
           break
       elif inputMessage == '@i':
           print('Bot Intents: ')
           print(json.dumps(newB.getBotConfidence(), indent=2))
       elif inputMessage == '@c':
           print('Bot Context: ')
           print(json.dumps(newB.getBotContext(), indent=2))
       else:
           inputMessage = ' {0} '.format(inputMessage)
           output = newB.getBotOutput(inputMessage, outputTheme)
           print('{0}Bot : {1}'.format(outputTheme, output))






.. toctree::
   :maxdepth: 2
   :caption: Modules:

   simbots/Bot
   simbots/Context
   simbots/Entity
   simbots/Intent



Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
